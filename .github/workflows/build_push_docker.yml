name: Push latest

on:
  push:
    branches:
      - '*'
      - '**'
      - '*/*'
      - '!master'

jobs:
  install:
    name: Build & Deploy in docker.io
    runs-on: [ ubuntu-latest ]
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Get version
        id: vars
        run: echo ::set-output name=version::$(cat app/VERSION)

      - name: Check Tag
        id: check-tag
        run: |
          if [[ ${{ steps.vars.outputs.version }} =~ .*\-dev$ ]]; then
            echo "::set-output name=dev::true"
          else
            echo "::set-output name=dev::false"
          fi

      - name: Check Build
        id: check-build
        run: |
          if [[ ${{ steps.vars.outputs.version }} =~ .*\-nobuild$ ]]; then
            echo "::set-output name=nobuild::true"
          else
            echo "::set-output name=nobuild::false"
          fi

      - name: Set up QEMU
        if: steps.check-build.outputs.nobuild == 'false'
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        if: steps.check-build.outputs.nobuild == 'false'
        uses: docker/setup-buildx-action@v1

      # - name: Login to DockerHub
      #   if: steps.check-build.outputs.nobuild == 'false'
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract branch name
        if: steps.check-build.outputs.nobuild == 'false'
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      # - name: Discord notification building state
      #   if: steps.check-build.outputs.nobuild == 'false'
      #   env:
      #     DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      #   uses: Ilshidur/action-discord@master
      #   with:
      #     args: '**MyElectricalData** : Version **${{ steps.vars.outputs.version }}** is in building state...'

      ##################################################################################################################
      # VERSION
      - name: Build and push ${{ steps.vars.outputs.version }}
        uses: docker/build-push-action@v2
        if: steps.check-build.outputs.nobuild == 'false'
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7
          push: true
          tags: |
            m4dm4rtig4n/enedisgateway2mqtt:${{ steps.vars.outputs.version }}
            m4dm4rtig4n/myelectricaldata:${{ steps.vars.outputs.version }}

      # - name: Discord notification {{ steps.vars.outputs.version }} image version is up to date
      #   if: steps.check-build.outputs.nobuild == 'false'
      #   env:
      #     DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      #   uses: Ilshidur/action-discord@master
      #   with:
      #     args: '**MyElectricalData** : **${{ steps.vars.outputs.version }}** image version is up to date'

      ##################################################################################################################
      # LATEST-DEV
      - name: Build and push
        uses: docker/build-push-action@v2
        if: steps.check-build.outputs.nobuild == 'false'
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7
          push: true
          tags: |
            m4dm4rtig4n/enedisgateway2mqtt:latest-dev
            m4dm4rtig4n/myelectricaldata:latest-dev

      # - name: Discord notification
      #   if: steps.check-build.outputs.nobuild == 'false'
      #   env:
      #     DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      #   uses: Ilshidur/action-discord@master
      #   with:
      #     args: '**MyElectricalData** : **latest-dev** image version is up to date'

      ##################################################################################################################
      # LATEST
      - name: Build and push
        uses: docker/build-push-action@v2
#        if: steps.check-tag.outputs.dev == 'false'
        if: steps.check-tag.outputs.dev == 'false' && steps.check-build.outputs.nobuild == 'false'
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7
          push: true
          tags: |
            m4dm4rtig4n/enedisgateway2mqtt:latest
            m4dm4rtig4n/myelectricaldata:latest

#       - name: Discord notification
# #        if: steps.check-tag.outputs.dev == 'false'
#         if: steps.check-tag.outputs.dev == 'false' && steps.check-build.outputs.nobuild == 'false'
#         env:
#           DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
#         uses: Ilshidur/action-discord@master
#         with:
#           args: '**MyElectricalData** : **latest** image version is up to date'

      ##################################################################################################################
      # FINISH
#       - name: Discord notification
# #        if: steps.check-tag.outputs.dev == 'false'
#         if: steps.check-tag.outputs.dev == 'false' && steps.check-build.outputs.nobuild == 'false'
#         env:
#           DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
#         uses: Ilshidur/action-discord@master
#         with:
#           args: '**MyElectricalData** : New version available **${{ steps.vars.outputs.version }}**'